Source: golang-github-gorilla-mux
Section: devel
Priority: extra
Maintainer: pkg-go <pkg-go-maintainers@lists.alioth.debian.org>
Uploaders: Docker Packaging Team <docker-maint@lists.alioth.debian.org>,
           Tianon Gravi <admwiggin@gmail.com>
Build-Depends: debhelper (>= 9), dh-golang, golang-context-dev, golang-go
Standards-Version: 3.9.6
Homepage: https://github.com/gorilla/mux
Vcs-Git: git://anonscm.debian.org/pkg-go/packages/golang-github-gorilla-mux.git
Vcs-Browser: https://anonscm.debian.org/cgit/pkg-go/packages/golang-github-gorilla-mux.git

Package: golang-github-gorilla-mux-dev
Architecture: all
Depends: golang-context-dev, golang-go, ${misc:Depends}, ${shlibs:Depends}
Conflicts: golang-mux-dev
Provides: golang-mux-dev
Replaces: golang-mux-dev
Built-Using: ${misc:Built-Using}
Description: A powerful URL router and dispatcher for golang.
 Package gorilla/mux implements a request router and dispatcher.
 .
 The name mux stands for "HTTP request multiplexer". Like the standard
 http.ServeMux, mux.Router matches incoming requests against a list of
 registered routes and calls a handler for the route that matches the URL
 or other conditions. The main features are:
 .
  * Requests can be matched based on URL host, path, path prefix, schemes,
    header and query values, HTTP methods or using custom matchers.
  * URL hosts and paths can have variables with an optional regular expression.
  * Registered URLs can be built, or "reversed", which helps maintaining
    references to resources.
  * Routes can be used as subrouters: nested routes are only tested if the
    parent route matches. This is useful to define groups of routes that share
    common conditions like a host, a path prefix or other repeated attributes.
    As a bonus, this optimizes request matching.
  * It implements the http.Handler interface so it is compatible with the
    standard http.ServeMux.
